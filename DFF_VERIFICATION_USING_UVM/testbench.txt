`include "uvm_macros.svh"
import uvm_pkg::*;

`include "interface"
`include "sequence_item"
`include "sequence"
`include "sequencencer"
`include "driver"
`include "monitor"
`include "agent"
`include "scoreboard"
`include "environment"
`include "test"

module top;
  
  logic clk;
  
  dff dut(.clk(intf.clk),.rst(intf.rst),.d(intf.d),.q(intf.q));
  
  dff_intf intf(.clk(clk));
  
  uvm_config_db#(virtual dff_intf)::set(null,"*","vif", intf);
  
  initial clk = 0;
  always #10 clk = ~clk;
  
  initial
    clk = 0;
    always #10 clk = ~clk;
    
  initial begin
    $monitor($time, ("clk = %d",clk);
             #100
             $finish;
             end
             
             endmodule
  
