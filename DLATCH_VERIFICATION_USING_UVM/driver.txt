class dlatch_driver extends uvm_driver#(dlatch_seq_item);
  `uvm_component_utils(dlatch_driver)

  virtual dlatch_intf intf;  // Interface
  dlatch_seq_item tx;        // Transaction item

  function new(string name, uvm_component parent);
    super.new(name, parent);
    `uvm_info("dlatch_driver", "constructor", UVM_MEDIUM)
  endfunction

  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
    if (!uvm_config_db#(virtual dlatch_intf)::get(this, "", "vif", intf))
      `uvm_fatal("no_intf in driver", "virtual interface get failed from config db");
  endfunction

  task run_phase(uvm_phase phase);
    forever begin
      `uvm_info("driver class", "run_phase", UVM_MEDIUM)
      seq_item_port.get_next_item(tx);  // Get the next transaction from the sequencer
      drive(tx);  // Drive the signals to the interface
      seq_item_port.item_done();  // Indicate item is done
    end
  endtask

  task drive(dlatch_seq_item tx);
    @(posedge intf.en)
    intf.rst <= tx.rst;
    intf.d <= tx.d;
    intf.q <= tx.q;
  endtask
endclass
