class scoreboard extends uvm_scoreboard;
  `uvm_component_utils(scoreboard)
  
  // Analysis port to receive transactions from the monitor
  uvm_analysis_imp #(seq_item, scoreboard) item_collect_export;

  // Declare the expected data for comparison
  logic [3:0] expected_data;

  function new(string name = "scoreboard", uvm_component parent = null);
    super.new(name, parent);
    item_collect_export = new("item_collect_export", this);
    expected_data = 0; // Initialize expected data
  endfunction
  
  // Implement the required 'write' function to handle transactions
  virtual function void write(seq_item req);
    $display("-------------------------------------------");
    
    // Comparison logic for the counter
    if(req.count == expected_data) begin
      `uvm_info(get_type_name(), $sformatf("MATCH: Expected=%0d, Got=%0d", expected_data, req.count), UVM_LOW);
    end
    else begin
      `uvm_error(get_type_name(), $sformatf("MISMATCH: Expected=%0d, Got=%0d", expected_data, req.count));
    end

    // Increment the expected data for the next cycle
    expected_data = expected_data + 1;
    
    $display("-------------------------------------------------");
  endfunction
  
endclass
