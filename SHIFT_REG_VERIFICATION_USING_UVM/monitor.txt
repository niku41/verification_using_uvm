class shr_monitor extends uvm_monitor;
  `uvm_component_utils(shr_monitor)
  
  function new(string name="shr_monitor",uvm_component parent);
    super.new(name,parent);
  endfunction
  
  shr_sequence_item  txn;
  
  virtual interface intf vif;
    
  uvm_analysis_port#(shr_sequence_item) ap_mon;
    
  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
    if(!(uvm_config_db#(virtual intf)::get(this,"","vif",vif)))
    begin
      `uvm_fatal("monitor","unable to get interface")
    end
    
    ap_mon=new("ap_mon",this);
    txn=shr_sequence_item::type_id::create("txn",this);
  endfunction
    
  task run_phase(uvm_phase phase);
    forever
    begin
      sample_dut(txn); 
      ap_mon.write(txn);
    end
  endtask

  task sample_dut(output shr_sequence_item txn);
    shr_sequence_item t=shr_sequence_item::type_id::create("t");
    t.in  = vif.in;
    t.rst = vif.rst;
    @vif.cb;
    if(vif.rst) t.rst=1;
    t.out = vif.cb.out;
    txn = t;
  endtask

endclass:shr_monitor